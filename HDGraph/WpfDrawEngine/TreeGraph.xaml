<UserControl x:Class="HDGraph.WpfDrawEngine.TreeGraph"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:extern="clr-namespace:HDGraph.WpfDrawEngine"
    x:Name="treeGraph1" ContextMenuOpening="treeGraph1_ContextMenuOpening"
    MouseWheel="treeGraph1_MouseWheel">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <extern:DivideBy2NumericConverter x:Key="myDivideBy2NumericConverter"/>
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="#7F000000"/>
                <Setter Property="BorderBrush" Value="#7Fdcdcdc" />
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style x:Key="ArcTextStyle">
                <Setter Property="Label.FontSize" Value="{Binding ElementName=sliderTextSize, Path=Value}">
                </Setter>
            </Style>
            <Style x:Key="MultipleNodeStyle">
                <Setter Property="Path.Fill">
                    <Setter.Value>
                        <LinearGradientBrush x:Name="brushMultipleNode" Opacity="1" >
                            <GradientStop Color="Gray" Offset="0"></GradientStop>
                            <GradientStop Color="LightGray" Offset="1"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="UncalculatedPart">
                <Setter Property="Path.Fill">
                    <Setter.Value>
                        <RadialGradientBrush Opacity="0.7"
                                         Center="0,0"  
                                         GradientOrigin="0,0"
                                         RadiusX="{Binding ElementName=arcUC, Path=LargeRadius}"
                                         RadiusY="{Binding ElementName=arcUC, Path=LargeRadius}"
                                         MappingMode="Absolute">
                            <RadialGradientBrush.GradientStops>
                                <GradientStop Color="Black" Offset="0.97"></GradientStop>
                                <GradientStop Color="White" Offset="1"></GradientStop>
                            </RadialGradientBrush.GradientStops>
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RotateArrowStyle">
                <!--<Setter Property="ContentControl.RenderTransform">
                    <Setter.Value>
                        <RotateTransform x:Name="rotateArrowRotation" Angle="0"
                                         CenterX="{Binding Path=ActualWidth, 
                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                              Converter={StaticResource myDivideBy2NumericConverter}}"
                                         CenterY="{Binding Path=ActualHeight, 
                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                              Converter={StaticResource myDivideBy2NumericConverter}}">
                        </RotateTransform>
                    </Setter.Value>
                </Setter>-->
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=treeGraph1, Path=IsRotating}" Value="true">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:0.5" AutoReverse="True" AccelerationRatio="1" RepeatBehavior="Forever"/>
                                    <!--<DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="360" To="0" Duration="0:0:1" RepeatBehavior="Forever"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                        To="0" Duration="0:0:0.4" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Storyboard x:Key="FadeInStoryboard">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="FadeOutStoryboard">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:1" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            
            <Storyboard x:Key="CenterArcStoryboard" Completed="Storyboard_Completed"
                        DecelerationRatio="0.5" AccelerationRatio="0.5">
                <SingleAnimation Storyboard.TargetProperty="StopAngle"
                                 To="359.99" Duration="00:00:01" />
                <SingleAnimation Storyboard.TargetProperty="SmallRadius"
                                 To="0" Duration="00:00:01" />
                <SingleAnimation Storyboard.TargetProperty="LargeRadius"
                                 To="10" Duration="00:00:01" />
            </Storyboard>
            
            
            <ContextMenu x:Key="essai" HasDropShadow="True" Opacity="0.9" Opened="contextMenu1_Opened">
                <TextBlock Text="{Binding Path=Name}" FontSize="16" FontWeight="Bold" ></TextBlock>
                <Separator/>
                <MenuItem Header="Show details"/>
                <MenuItem Header="Open in external window"/>
                <Separator/>
                <MenuItem Header="Refresh this directory"/>
                <MenuItem Header="Center graph on this directory"/>
                <Separator/>
                <MenuItem Header="Delete this directory and all subdirectories">
                    <MenuItem Header="Delete permanently"/>
                </MenuItem>
            </ContextMenu>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0,0,0,0" x:Name="grid1" MouseWheel="grid1_MouseWheel">
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <Viewbox Grid.Row="0" x:Name="viewBoxTreegraph">
            <Canvas x:Name="canvas1" Width="500" Height="500"
                    MouseDown="canvas1_MouseDown"
                    MouseUp="canvas1_MouseUp" 
                    MouseMove="canvas1_MouseMove">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <RotateTransform x:Name="rotateTransform" Angle="{Binding ElementName=treeGraph1, Path=CurrentDrawOptions.ImageRotation}"></RotateTransform>

                        <ScaleTransform 
                                ScaleX="{Binding ElementName=sliderScale, Path=Value}"
                                ScaleY="{Binding ElementName=sliderScale, Path=Value}">
                        </ScaleTransform>
                        <TranslateTransform
                             X="{Binding 
                                Path=ActualWidth,
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, 
                                 Converter={StaticResource myDivideBy2NumericConverter}}"
                            Y="{Binding 
                                Path=ActualHeight,
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, 
                                 Converter={StaticResource myDivideBy2NumericConverter}}"
                            >
                        </TranslateTransform>
                    </TransformGroup>
                </Canvas.RenderTransform>
            </Canvas>
        </Viewbox>
        <ContentControl Style="{StaticResource RotateArrowStyle}"
                        Content="{StaticResource RotateArrow}" 
                        Grid.Row="0" HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        Opacity="0" Margin="10"
                        ></ContentControl>
        <!--<ContentControl Style="{StaticResource RotateArrowStyle}" Content="{StaticResource RotateArrow}" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top"></ContentControl>
        <ContentControl Style="{StaticResource RotateArrowStyle}" Content="{StaticResource RotateArrow}" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom"></ContentControl>
        <ContentControl Style="{StaticResource RotateArrowStyle}" Content="{StaticResource RotateArrow}" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"></ContentControl>-->
        <Label x:Name="labelInfo" Grid.Row="1" Visibility="Hidden">Nothing to draw.</Label>
        <Label Grid.Row="1" x:Name="labelStatus" >
        </Label>
        <Canvas>
            <Expander Header="View options" BorderBrush="Gray" BorderThickness="2" Margin="20"
                  Name="expander1" Background="#55BAC6FF"
                  Padding="10 0 10 0"
                  >
                <Grid Margin="0 0 0 10" Width="350" Background="#BBFFFFFF">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="45">
                        </ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" VerticalAlignment="Center">Rotation :</Label>
                    <Slider Grid.Column="1" Grid.Row="0"
                    Name="sliderRotation" Margin="10,10,10,10" Maximum="360" Minimum="0" Value="{Binding ElementName=treeGraph1, Path=CurrentDrawOptions.ImageRotation}" />
                    <Label Grid.Column="2" Grid.Row="0" 
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Content="{Binding ElementName=treeGraph1, Path=CurrentDrawOptions.ImageRotation}"
                       ContentStringFormat="{}{0:0.0}°" />

                    <Label Grid.Column="0" Grid.Row="1"  VerticalAlignment="Center">Zoom :</Label>
                    <Slider Grid.Column="1" Grid.Row="1" Name="sliderScale" 
                            Margin="10,10,10,10" Maximum="20" Minimum="0.5" Value="1" />
                    <Label Grid.Column="2" Grid.Row="1" 
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           Content="{Binding ElementName=sliderScale, Path=Value}"
                           ContentStringFormat="x {0:0.0}" />


                    <Label Grid.Column="0" Grid.Row="2" VerticalAlignment="Center">Text size :</Label>
                    <Slider Grid.Column="1" Grid.Row="2" Name="sliderTextSize" 
                            Margin="10,10,10,10" Maximum="25" Minimum="0.5" Value="{Binding ElementName=treeGraph1, Path=CurrentDrawOptions.TextSize}"/>
                    <Label Grid.Column="2" Grid.Row="2" 
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           Content="{Binding ElementName=sliderTextSize, Path=Value}"
                           ContentStringFormat="x {0:0.0}" />

                    <StackPanel Visibility="Hidden" Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="3">
                        <Button x:Name="ButtonPrint" 
                        Click="ButtonPrint_Click">Print</Button>
                    </StackPanel>
                </Grid>
            </Expander>
        </Canvas>

    </Grid>


</UserControl>
